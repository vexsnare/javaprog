package tc;

public class Dubs
{
	public long count(long L, long R)
	{
		if(R < L) return 0;
		if(L == R) {
			if(L%10 == ((L%100)/10)) return 1;
			else return 0;
		}
		long ans = 0;
		ans += (R -(R%100))/100 - (L- (L%100))/100;
		if(ans == 0) {
			ans += getCount(L%100, R%100);
		} else {
			long m = getCount(L % 100, R % 100);
			if((R%1000) /100 ==  1) m = m-1;
			ans *= m;
			if((R%1000) /100 ==  1) ans += 1;
		}
		//if(R%10 == (R%100)/10) ans += 1;
		return ans;
		
	}
	static long getCount(long x, long y) {
		long ret = 0;
		if(y <= x) y += 100;
		for (long i = x; i <= y; i++) {
			if(i%10 == ((i%100)/10)) ret++;
		}
		return ret;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long p0, long p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		Dubs obj;
		long answer;
		obj = new Dubs();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long p0;
		long p1;
		long p2;
		
		// ----- test 0 -----
		p0 = 10L;
		p1 = 10L;
		p2 = 0L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 10L;
		p1 = 20L;
		p2 = 1L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 49L;
		p1 = 101L;
		p2 = 6L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1111111L;
		p1 = 111111111L;
		p2 = 11000001L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 91750002841L;
		p1 = 91751522033L;
		p2 = 151920L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
