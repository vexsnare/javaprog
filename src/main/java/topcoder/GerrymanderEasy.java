package topcoder;


public class GerrymanderEasy
{
	static int xx[][];
	static int yy[][];
	public double getmax(int[] A, int[] B, int K)
	{
		double ret = 0;
		int n = A.length;

		for (int i = 0; i < n; i++) {
			int x = 0;
			int y = 0;
			for (int j = i; j < n; j++) {
				x += B[j];
				y += A[j];
				if(j - i + 1 >= K) {
					if(Double.compare(ret, (double)x/y) < 0) ret = (double)x/y;
				}
			}
		}
		return ret;

	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, double p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		GerrymanderEasy obj;
		double answer;
		obj = new GerrymanderEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.getmax(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == answer && Math.abs(p3 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p3));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		double p3;
		
		// ----- test 0 -----
		p0 = new int[]{5,1,2,7};
		p1 = new int[]{4,0,2,2};
		p2 = 2;
		p3 = 0.75D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{12,34,56,78,90};
		p1 = new int[]{1,1,1,1,1};
		p2 = 1;
		p3 = 0.08333333333333333D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{10000,10000,10000,10000,10000,10000,10000,10000,10000,10000};
		p1 = new int[]{3,1,4,1,5,9,2,6,5,3};
		p2 = 5;
		p3 = 5.4E-4D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{123,4,46,88,22,34,564,87,56,311,886};
		p1 = new int[]{0,0,0,0,0,0,0,0,0,0,0};
		p2 = 1;
		p3 = 0.0D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
